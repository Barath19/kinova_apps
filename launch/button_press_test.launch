<?xml version="1.0"?>

<launch>
    <!-- Robot namespace -->
    <arg name="robot_name" default="my_gen3"/>
    <arg name="pose_input" default="/pcl_closest_obj/output_pose"/>
    <arg name="start_delay_seconds" default="0"/>

    <!-- Launch the example in that namespace -->
    <!-- node name="full_arm_movement_python" pkg="robothon2023" type="full_arm_movement.py" output="screen" launch-prefix="bash -c 'sleep $(arg start_delay_seconds); $0 $@' ">
        <param name="robot_name" value="$(arg robot_name)"/>
    </node -->

    <node pkg="robothon2023" type="button_press_test.py" name="button_press" output="screen">
        <rosparam command="load" file="$(find robothon2023)/config/joint_angles.yaml"/>
        <rosparam command="load" file="$(find robothon2023)/config/boundary_safety.yaml"/>
        <rosparam command="load" file="$(find robothon2023)/config/task_params.yaml"/>
        <rosparam command="load" file="$(find robothon2023)/config/trajectories.yaml"/>
        <remap from="~pose_in" to="$(arg pose_input)" />
    </node>

    <node pkg="robothon2023" type="pose_mock_up_gui_node"
          name="pose_mock_up_gui.py" output="screen">

    <!-- the cycle rate of the node (in hz) -->
    <param name="loop_rate" type="double" value="10.0"/>

    <!-- Reference frame of the published pose -->
    <param name="reference_frame" type="str" value="base_link"/>

    <remap from="~mock_up_pose" to="/mcr_perception/object_selector/output/object_pose"/>
  </node>
    <!-- node pkg="tf2_ros" type="static_transform_publisher" name="board_link_pub" args="0.4688 0.3703 0.069 0.0 0.0 -0.765 0.643 base_link board_link" / -- >
    <node pkg="tf2_ros" type="static_transform_publisher" name="slider_start_pub" args="0.057 -0.035 0 0 0 0 1 board_link slider_start_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="slider_end_pub" args="0.045 0 0 0 0 0 1 slider_start_link slider_end_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="meter_plug_black_pub" args="0 -0.058 0 0 0 0 1 board_link meter_plug_black_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="meter_plug_red_pub" args="0.025 0 0 0 0 0 1 meter_plug_black_link meter_plug_red_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="door_knob_pub" args="0.005 -0.142 0 0 0 0 1 board_link door_knob_link" />
</launch>
